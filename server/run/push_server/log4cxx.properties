# 用于配置log4CXX日志记录器的行为 该文件指定了日志记录的级别、输出目标（控制台和文件）、格式等设置

# 1.根记录器的配置 缺省不输出日志到控制台stdout
# 1-1.将日志级别设置为INFO，表示只输出INFO级别及以上的日志消息 输出目标为名为 default 的appender
log4j.rootLogger=INFO, default
# log4j.rootLogger=DEBUG, stdout, default

# 1-2.配置名为org.apache的logger的附加属性 当设置为false 表示该logger的日志消息不会被传递给父级logger
log4j.additivity.org.apache=false


# 2.应用于控制台
# 2-1.配置控制台输出的appender:使用了ConsoleAppender，并指定了输出格式
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%-5p] - %m%n
#log4j.appender.stdout.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%t] %-5p - %m%n


# 3.应用于文件回滚
# 3-1.配置默认的文件回滚appender:指定了输出文件路径、文件大小上限、文件备份索引等设置
log4j.appender.default=org.apache.log4j.RollingFileAppender
log4j.appender.default.File=./log/default.log
log4j.appender.default.MaxFileSize=10MB
log4j.appender.default.MaxBackupIndex=12

# 3-2.配置名为test的 appender 的附加模式 日志消息将被追加到现有的日志文件末尾 否则会覆盖或创建新的日志文件
log4j.appender.default.Append=true

# 3-3.Threshold用于控制输出级别
log4j.appender.default.Threshold=DEBUG

# 3-4.指定默认布局模式 决定了日志消息的输出格式
log4j.appender.default.layout=org.apache.log4j.PatternLayout
log4j.appender.default.layout.ConversionPattern=%d [%-5p %.16c] - %m%n
#log4j.appender.default.layout.ConversionPattern=%d [%t] %-5p %.16c - %m%n


# 4.配置名为test的记录器，将日志级别设置为DEBUG，并将输出目标指定为名为 test 的appender
log4j.logger.test=DEBUG, test
# 应用于文件回滚
# 4-1.配置用于test记录器的文件回滚appender：指定了输出文件路径、文件大小上限、文件备份索引等设置
log4j.appender.test=org.apache.log4j.RollingFileAppender
log4j.appender.test.File=./log/TEST.log
log4j.appender.test.MaxFileSize=10MB
log4j.appender.test.MaxBackupIndex=12
log4j.appender.test.DatePattern='.'yyyy-MM-dd

# 4-2.配置名为test的 appender 的附加模式 日志消息将被追加到现有的日志文件末尾 否则会覆盖或创建新的日志文件
log4j.appender.test.Append=true

# 4-3.Threshold用于控制输出级别
log4j.appender.test.Threshold=DEBUG

# 4-4.指定默认布局模式 日志消息的输出格式
log4j.appender.test.layout=org.apache.log4j.PatternLayout
log4j.appender.test.layout.ConversionPattern=%d [%-5p %.16c] - %m%n

